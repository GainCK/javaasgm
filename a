 public static void paymentMenu(Scanner scanner) {
        while (true) {
            System.out.println("\n=== Payment Menu ===");
            System.out.println("1. Process Payment");
            System.out.println("2. Cancel Payment");
            System.out.println("3. View Payments History");
            System.out.println("4. Back to Guest Menu");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    // Ensure the logged-in user has bookings to pay for
                    if (bookingList.isEmpty()) {
                        System.out.println("You have no bookings to pay for. Please create a booking first.");
                        break;
                    }
                    // Process payment for a booking tied to the logged-in guest
                    System.out.print("Enter Booking ID to pay for: ");
                    String bid = scanner.nextLine();
                    Booking toPay = null;
                    for (Booking b : bookingList) {
                        if (b.getBookingID().equalsIgnoreCase(bid)) {
                            toPay = b;
                            break;
                        }
                    }
                    if (toPay == null) {
                        System.out.println("Booking ID not found.");
                        break;
                    }
                    // Create Payment for that booking
                    Payment payment = new Payment(0.0, 0, toPay);
                    payment.processPayment(scanner, paymentList);
                    // Store payment
                    paymentList.add(payment);
                    break;

                case 2:
                    new Payment().cancelPayment();
                    break;

                case 3:
                    new Payment().viewPaymentsHistory(paymentList);
                    break;

                case 4:
                    return; // Back to Guest Menu
                default:
                    System.out.println("Invalid choice!");
            }
        }


         public static void staffMenu(Scanner scanner, Staff staff) {
        while (true) {
            System.out.println("\n=== Staff Menu ===");
            System.out.println("1. Check In Room");
            System.out.println("2. Check Out Room");
            System.out.println("3. Generate Report");
            System.out.println("4. Update Profile");
            System.out.println("5. Logout");
            System.out.print("Enter your choice: ");
            int choice = Integer.parseInt(scanner.nextLine());

            switch (choice) {
                case 1:
                    staff.checkInRoom(scanner);
                    break;
                case 2:
                    staff.checkOutRoom(scanner);
                    break;
                case 3:
                    staff.generateReport();
                    break;
                case 4:
                    Account.updateProfile(scanner, staff);
                    break;
                case 5:
                    staff.logout();
                    return;
                default:
                    System.out.println("Invalid choice! Please select again.");
            }
        }
    }